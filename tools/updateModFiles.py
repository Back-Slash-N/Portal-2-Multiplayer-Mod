import shutil, os, sys, platform, ctypes

#? Purpose:
#* When changes are made to src\ModFiles, they won't be used when
#* the mod is mounted because they aren't in the p2mm folder generated by
#* the launcher. Originally there was code that would automatically
#* do this when developer is set to true, but it was janky and broken
#* so it is now separate in this script. Simply this takes a relative
#* path to the ModFiles then copies the folder over to the p2mm folder.

#? User Process:
#* 1- Copy the relative path of the ModFiles from the user. (ex: src\ModFiles)
#* 2- Input the relative path.
#* 3- The files should copy over and replace any "ModFiles" folder that's already there
#* 4- Start the mod from the launcher

# Get the users local p2mm folder that's generated by the launcher
def FindLocalP2MM() -> str:
    if (sys.platform == "win32"): # if using a Windows system
        # Thanks stackOverflow for this
        # This code allows us to get the document's folder on any windows pc with any language
        CSIDL_PERSONAL = 5       # My Documents
        SHGFP_TYPE_CURRENT = 0   # Get current, not default value

        buf = ctypes.create_unicode_buffer(ctypes.wintypes.MAX_PATH)
        ctypes.windll.shell32.SHGetFolderPathW(None, CSIDL_PERSONAL, None, SHGFP_TYPE_CURRENT, buf)

        # Set the modPath to the users documents folder
        destinationFolder = buf.value + os.sep + "p2mm" + os.sep + "ModFiles"
    elif (sys.platform.startswith("linux")): # if using a Linux system
        if ("valve" in platform.release()): # if using the Steam OS 3.0 distro
            destinationFolder = os.path.expanduser("~") + os.sep + "Documents/p2mm/ModFiles"
        else:
            destinationFolder = os.path.expanduser("~") + os.sep + ".config/p2mm/ModFiles"
    
    return destinationFolder

# Copy over the folder replacing any that already exists
def CopyFiles():
    if not os.path.isdir("src" + os.sep + "ModFiles"):
        print("ModFiles folder not found in src/ModFiles! Exiting...")
        exit()

    shutil.copytree("src" + os.sep + "ModFiles", FindLocalP2MM(), dirs_exist_ok=True)

CopyFiles()