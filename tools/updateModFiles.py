import shutil, os, sys, platform, ctypes

#? Purpose:
#* When changes are made to src\ModFiles, they won't be used when
#* the mod is mounted because they aren't in the p2mm folder generated by
#* the launcher. Originally there was code that would automatically
#* do this when developer is set to true, but it was janky and broken
#* so it is now separate in this script. Simply this takes a relative
#* path to the ModFiles then copies the folder over to the p2mm folder.

#? User Process:
#* 1- Run script from the src directory. `python tools\updateModFiles.py`
#* 3- The old ModFiles folder will be removed and replaced with a the ModFiles folder in the relative path given.
#* 4- Start the mod from the launcher.

# Get the users local p2mm folder that's generated by the launcher
def FindLocalP2MM() -> str:
    destinationFolder: str = ""

    print("Getting users local p2mm path...")
    if (sys.platform == "win32"): # if using a Windows system
        # Thanks stackOverflow for this
        # This code allows us to get the document's folder on any windows pc with any language
        CSIDL_PERSONAL = 5       # My Documents
        SHGFP_TYPE_CURRENT = 0   # Get current, not default value

        buf = ctypes.create_unicode_buffer(260)
        ctypes.windll.shell32.SHGetFolderPathW(None, CSIDL_PERSONAL, None, SHGFP_TYPE_CURRENT, buf)

        # Set the modPath to the users documents folder
        destinationFolder = buf.value + os.sep + "p2mm"
    elif (sys.platform.startswith("linux")): # if using a Linux system
        if ("valve" in platform.release()): # if using the Steam OS 3.0 distro
            destinationFolder = os.path.expanduser("~") + os.sep + "Documents" + os.sep + "p2mm"
        else:
            destinationFolder = os.path.expanduser("~") + os.sep + ".config" + os.sep + "p2mm"

    if not os.path.exists(destinationFolder):
        print("Could not get users local p2mm path! Doesn't exist! Exiting...")
        exit(1)
    
    return destinationFolder

# Copy over the folder replacing any that already exists
def CopyFiles():
    # Check if the src/ModFiles exists, if not exit, they need to exist for this to work
    if not os.path.isdir("src" + os.sep + "ModFiles"):
        print("ModFiles folder not found in src/ModFiles! Exiting...")
        exit(1)

    # Get the users local p2mm folder depending on their installation
    p2mmModFilesPath: str = FindLocalP2MM()
    
    # Remove the old p2mm/ModFiles
    if os.path.isdir(p2mmModFilesPath + os.sep + "ModFiles"):
        print("Removing old p2mm/ModFiles...")
        shutil.rmtree(p2mmModFilesPath + os.sep + "ModFiles")

    # Copy over the new src/ModFiles
    print("Copying over files from src/ModFiles to the users p2mm folder...")
    shutil.copytree("src" + os.sep + "ModFiles", p2mmModFilesPath + os.sep + "ModFiles", dirs_exist_ok=True)

CopyFiles()
print("src/ModFiles copied over to p2mm/ModFiles! :D")
exit(0)